{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OCR API Documentation","text":"<p>Welcome to the OCR API documentation. This API provides optical character recognition capabilities for extracting text from images, with specialized support for receipts.</p>"},{"location":"#overview","title":"Overview","text":"<p>The OCR API is built with FastAPI and uses Tesseract OCR engine to extract text from uploaded images. It supports both plain text extraction and structured receipt parsing.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Image upload and processing</li> <li>Plain text OCR extraction</li> <li>Structured receipt data extraction</li> <li>CORS enabled for frontend integration</li> <li>Docker containerized deployment</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li> <p>Start the API server:    <pre><code>docker run -p 4000:4000 omchoksi/ocrapi:latest\n</code></pre></p> </li> <li> <p>Access the API at <code>http://localhost:4000</code></p> </li> <li> <p>View interactive API documentation at <code>http://localhost:4000/docs</code></p> </li> </ol>"},{"location":"#api-endpoints","title":"API Endpoints","text":"<ul> <li><code>GET /</code> - Health check</li> <li><code>POST /api/v1/ocr/extract-text/</code> - Extract plain text from image</li> <li><code>POST /api/v1/ocr/extract-receipt/</code> - Extract structured receipt data</li> </ul>"},{"location":"#testing","title":"Testing","text":"<p>Use the provided Postman collection for testing the API endpoints.</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#base-url","title":"Base URL","text":"<pre><code>http://localhost:4000\n</code></pre>"},{"location":"api/#authentication","title":"Authentication","text":"<p>No authentication required for this API.</p>"},{"location":"api/#endpoints","title":"Endpoints","text":""},{"location":"api/#get","title":"GET /","text":"<p>Health check endpoint.</p> <p>Response: <pre><code>{\n  \"message\": \"OCR API is running\"\n}\n</code></pre></p>"},{"location":"api/#post-apiv1ocrextract-text","title":"POST /api/v1/ocr/extract-text/","text":"<p>Extract plain text from an uploaded image.</p> <p>Request: - Method: POST - Content-Type: multipart/form-data - Body: file (image file)</p> <p>Response: <pre><code>{\n  \"filename\": \"image.jpg\",\n  \"text\": \"Extracted text content...\",\n  \"confidence\": 85.5\n}\n</code></pre></p> <p>Error Response: <pre><code>{\n  \"error\": \"Error message\",\n  \"detail\": \"Additional details\"\n}\n</code></pre></p>"},{"location":"api/#post-apiv1ocrextract-receipt","title":"POST /api/v1/ocr/extract-receipt/","text":"<p>Extract structured data from a receipt image.</p> <p>Request: - Method: POST - Content-Type: multipart/form-data - Body: file (receipt image)</p> <p>Response: <pre><code>{\n  \"filename\": \"receipt.jpg\",\n  \"lines\": [\n    {\n      \"text\": \"Line of text\",\n      \"confidence\": 90.0\n    }\n  ],\n  \"words\": [\n    {\n      \"text\": \"Word\",\n      \"confidence\": 95.0,\n      \"x\": 10,\n      \"y\": 20,\n      \"width\": 50,\n      \"height\": 15\n    }\n  ]\n}\n</code></pre></p> <p>Error Response: <pre><code>{\n  \"error\": \"Error message\",\n  \"detail\": \"Additional details\"\n}\n</code></pre></p>"},{"location":"api/#data-models","title":"Data Models","text":""},{"location":"api/#ocrresponse","title":"OCRResponse","text":"<pre><code>{\n  \"filename\": \"string\",\n  \"text\": \"string\",\n  \"confidence\": \"number\"\n}\n</code></pre>"},{"location":"api/#receiptresponse","title":"ReceiptResponse","text":"<pre><code>{\n  \"filename\": \"string\",\n  \"lines\": [\n    {\n      \"text\": \"string\",\n      \"confidence\": \"number\"\n    }\n  ],\n  \"words\": [\n    {\n      \"text\": \"string\",\n      \"confidence\": \"number\",\n      \"x\": \"number\",\n      \"y\": \"number\",\n      \"width\": \"number\",\n      \"height\": \"number\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/#error-response","title":"Error Response","text":"<pre><code>{\n  \"error\": \"string\",\n  \"detail\": \"string\"\n}\n</code></pre>"},{"location":"api/#supported-image-formats","title":"Supported Image Formats","text":"<ul> <li>JPEG</li> <li>PNG</li> <li>BMP</li> <li>TIFF</li> </ul>"},{"location":"api/#rate-limiting","title":"Rate Limiting","text":"<p>No rate limiting implemented.</p>"},{"location":"api/#cors","title":"CORS","text":"<p>CORS is enabled for all origins to allow frontend integration.</p>"},{"location":"setup/","title":"Setup","text":""},{"location":"setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker installed on your system</li> <li>Internet connection for pulling the Docker image</li> </ul>"},{"location":"setup/#running-the-api","title":"Running the API","text":""},{"location":"setup/#using-docker-recommended","title":"Using Docker (Recommended)","text":"<ol> <li> <p>Pull the image from Docker Hub:    <pre><code>docker pull omchoksi/ocrapi:latest\n</code></pre></p> </li> <li> <p>Run the container:    <pre><code>docker run -p 4000:4000 omchoksi/ocrapi:latest\n</code></pre></p> </li> <li> <p>The API will be available at <code>http://localhost:4000</code></p> </li> </ol>"},{"location":"setup/#local-development","title":"Local Development","text":"<ol> <li> <p>Clone the repository and navigate to the ocrapi directory</p> </li> <li> <p>Install dependencies:    <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Install Tesseract OCR:</p> </li> <li>Windows: Download from https://github.com/UB-Mannheim/tesseract/wiki</li> <li> <p>Linux: <code>sudo apt-get install tesseract-ocr tesseract-ocr-eng</code></p> </li> <li> <p>Run the application:    <pre><code>uvicorn main:app --host 0.0.0.0 --port 4000\n</code></pre></p> </li> </ol>"},{"location":"setup/#building-the-docker-image-locally","title":"Building the Docker Image Locally","text":"<p>If you want to build the image yourself:</p> <pre><code>cd ocrapi\ndocker build -t ocrapi .\ndocker run -p 4000:4000 ocrapi\n</code></pre>"},{"location":"setup/#accessing-the-api","title":"Accessing the API","text":"<ul> <li>API Base URL: <code>http://localhost:4000</code></li> <li>Interactive Documentation: <code>http://localhost:4000/docs</code></li> <li>Alternative Documentation: <code>http://localhost:4000/redoc</code></li> </ul>"},{"location":"testing/","title":"Testing","text":""},{"location":"testing/#postman-collection","title":"Postman Collection","text":"<p>A Postman collection is provided for testing the API endpoints. Import the <code>postman_collection.json</code> file into Postman.</p>"},{"location":"testing/#collection-structure","title":"Collection Structure","text":"<ul> <li>OCR API Tests</li> <li>Health Check</li> <li>Extract Text</li> <li>Extract Receipt</li> </ul>"},{"location":"testing/#environment-variables","title":"Environment Variables","text":"<p>Set up the following environment variables in Postman:</p> <ul> <li><code>base_url</code>: <code>http://localhost:4000</code></li> </ul>"},{"location":"testing/#test-cases","title":"Test Cases","text":"<ol> <li>Health Check</li> <li>Method: GET</li> <li>URL: <code>{{base_url}}/</code></li> <li> <p>Expected: 200 OK with welcome message</p> </li> <li> <p>Extract Text</p> </li> <li>Method: POST</li> <li>URL: <code>{{base_url}}/api/v1/ocr/extract-text/</code></li> <li>Body: form-data with file</li> <li> <p>Expected: 200 OK with extracted text</p> </li> <li> <p>Extract Receipt</p> </li> <li>Method: POST</li> <li>URL: <code>{{base_url}}/api/v1/ocr/extract-receipt/</code></li> <li>Body: form-data with receipt image</li> <li>Expected: 200 OK with structured receipt data</li> </ol>"},{"location":"testing/#manual-testing","title":"Manual Testing","text":"<p>You can also test the API using curl:</p> <pre><code># Health check\ncurl http://localhost:4000/\n\n# Extract text\ncurl -X POST \"http://localhost:4000/api/v1/ocr/extract-text/\" -F \"file=@image.jpg\"\n\n# Extract receipt\ncurl -X POST \"http://localhost:4000/api/v1/ocr/extract-receipt/\" -F \"file=@receipt.jpg\"\n</code></pre>"},{"location":"testing/#sample-images","title":"Sample Images","text":"<p>Place test images in a <code>test/</code> directory for easy access during testing.</p>"}]}